# Generated by roxygen2: do not edit by hand

export(apply_privacy_censoring)
export(assert)
export(ceiling_epiweek)
export(compute_binary_response)
export(compute_count_response)
export(create_complete_responses)
export(create_data_for_aggregation)
export(create_dir_not_exist)
export(end_of_prev_full_month)
export(end_of_prev_full_week)
export(filter_complete_responses)
export(filter_data_for_aggregation)
export(filter_module_complete_responses)
export(filter_responses)
export(floor_epiweek)
export(get_filenames_in_range)
export(get_range_prev_full_month)
export(get_range_prev_full_period)
export(get_range_prev_full_week)
export(get_sparse_filenames)
export(jeffreys_se)
export(join_weights)
export(load_archive)
export(load_response_one)
export(load_responses_all)
export(merge_responses)
export(mix_weights)
export(msg_df)
export(msg_plain)
export(post_process_aggs)
export(produce_aggregates)
export(produce_allowed_zip5)
export(produce_crosswalk_county)
export(produce_crosswalk_hrr)
export(produce_crosswalk_list)
export(produce_crosswalk_msa)
export(produce_crosswalk_national)
export(produce_crosswalk_state)
export(produce_zip_metadata)
export(read_contingency_params)
export(read_params)
export(run_contingency_tables)
export(run_facebook)
export(start_of_prev_full_month)
export(start_of_prev_full_week)
export(summarize_aggregations_group)
export(summarize_aggs)
export(summarize_indicators)
export(update_archive)
export(update_params)
export(verify_aggs)
export(write_cid)
export(write_cid_experimental_wrapper)
export(write_contingency_tables)
export(write_data_api)
export(write_individual)
import(data.table)
importFrom(Rcpp,evalCpp)
importFrom(data.table,fread)
importFrom(dplyr,"%>%")
importFrom(dplyr,across)
importFrom(dplyr,all_of)
importFrom(dplyr,anti_join)
importFrom(dplyr,arrange)
importFrom(dplyr,bind_cols)
importFrom(dplyr,bind_rows)
importFrom(dplyr,case_when)
importFrom(dplyr,coalesce)
importFrom(dplyr,desc)
importFrom(dplyr,everything)
importFrom(dplyr,filter)
importFrom(dplyr,full_join)
importFrom(dplyr,group_by)
importFrom(dplyr,if_else)
importFrom(dplyr,inner_join)
importFrom(dplyr,left_join)
importFrom(dplyr,mutate)
importFrom(dplyr,mutate_at)
importFrom(dplyr,rename)
importFrom(dplyr,select)
importFrom(dplyr,summarize)
importFrom(dplyr,tibble)
importFrom(dplyr,ungroup)
importFrom(dplyr,vars)
importFrom(jsonlite,fromJSON)
importFrom(jsonlite,read_json)
importFrom(lubridate,as_date)
importFrom(lubridate,ceiling_date)
importFrom(lubridate,days)
importFrom(lubridate,epiweek)
importFrom(lubridate,floor_date)
importFrom(lubridate,force_tz)
importFrom(lubridate,weeks)
importFrom(lubridate,with_tz)
importFrom(lubridate,ymd)
importFrom(lubridate,ymd_hms)
importFrom(parallel,detectCores)
importFrom(parallel,mclapply)
importFrom(purrr,reduce)
importFrom(readr,col_character)
importFrom(readr,col_integer)
importFrom(readr,cols)
importFrom(readr,locale)
importFrom(readr,read_csv)
importFrom(readr,read_lines)
importFrom(readr,read_rds)
importFrom(readr,write_csv)
importFrom(readr,write_rds)
importFrom(rlang,.data)
importFrom(stats,complete.cases)
importFrom(stats,na.omit)
importFrom(stats,setNames)
importFrom(stats,weighted.mean)
importFrom(stringi,stri_extract)
importFrom(stringi,stri_extract_first)
importFrom(stringi,stri_replace)
importFrom(stringi,stri_replace_all)
importFrom(stringi,stri_split)
importFrom(stringi,stri_sub)
importFrom(stringi,stri_trans_tolower)
importFrom(stringi,stri_trim)
importFrom(tibble,add_column)
importFrom(tibble,tribble)
importFrom(utils,tail)
useDynLib(delphiFacebook, .registration = TRUE)
