% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{read_params}
\alias{read_params}
\title{Return params file as an R list}
\usage{
read_params(
  path = "params.json",
  template_path = "params.json.template",
  train_models = FALSE,
  make_predictions = FALSE,
  indicators = c("all", unique(INDICATORS_AND_SIGNALS$indicator))
)
}
\arguments{
\item{path}{path to the parameters file; if not present, will try to copy the file
"params.json.template"}

\item{template_path}{path to the template parameters file}

\item{train_models}{boolean indicating whether to train models (TRUE). If
FALSE previously trained models (stored locally) will be used instead.
Default is TRUE.}

\item{make_predictions}{boolean indicating whether to generate and save
corrections (TRUE) or not. Default is TRUE.}

\item{indicators}{string specifying a single indicator to process or all
indicators ("all", default)}
}
\value{
a named list of parameters values
}
\description{
Reads a parameters file. If the file does not exist, the function will create a copy of
'"params.json.template" and read from that.
}
\details{
A params list should contain the following fields. If not included,
they will be filled with default values when possible.

params$ref_lag: reference lag, after x days, the update is considered to be
    the response. 60 is a reasonable choice for CHNG outpatient data
params$input_dir: link to the input data file
params$testing_window: the testing window used for saving the runtime. Could
    set it to be 1 if time allows
params$test_dates: list of two elements, the first one is the start date and
    the second one is the end date
params$training_days: set it to be 270 or larger if you have enough data
params$num_col: the column name for the counts of the numerator, e.g. the
    number of COVID claims
params$denom_col: the column name for the counts of the denominator, e.g. the
    number of total claims
params$geo_level: character vector of "state" and "county", by default
params$taus: vector of considered quantiles
params$lambda: the level of lasso penalty
params$export_dir: directory to save corrected data to
params$lp_solver: LP solver to use in quantile_lasso(); "gurobi" or "glpk"
}
