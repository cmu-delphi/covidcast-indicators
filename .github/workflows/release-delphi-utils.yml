name: (Deprecated) Release Delphi Utils

on:
  push:
    branches:
      - not_prod
    paths:
      - '_delphi_utils_python/**'
  workflow_dispatch:

jobs:
  correct_repository:
    runs-on: ubuntu-latest
    steps:
      - name: fail on fork
        if: github.repository_owner != 'cmu-delphi'
        run: exit 1

  create_delphi_utils_release:
    needs: correct_repository
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: _delphi_utils_python
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.CMU_DELPHI_DEPLOY_MACHINE_SSH }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Extract version
        id: extract_version
        run: |
          python -m pip install bump2version
          echo -n "::set-output name=version::"
          bump2version --dry-run --list patch | grep ^current_version | sed -r s,"^.*=",,
      - name: Tag version
        run: |
          git tag delphi-utils/v${{ steps.extract_version.outputs.version }}
          git push --tags
    outputs:
      version: ${{ steps.extract_version.outputs.version }}

  upload_pypi:
    needs: create_delphi_utils_release
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: _delphi_utils_python
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install testing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest pydocstyle wheel twine
      - name: Install
        run: |
          make install
      - name: Release
        run: |
          make release
      - uses: actions/upload-artifact@v2
        with:
          name: delphi_utils
          path: _delphi_utils_python/dist/*.tar.gz
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.DELPHI_PYPI_PROD_TOKEN }}
          packages_dir: _delphi_utils_python/dist/
          skip_existing: true
          # repository_url: https://test.pypi.org/legacy/

  sync_main:
    needs: correct_repository
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: main
          ssh-key: ${{ secrets.CMU_DELPHI_DEPLOY_MACHINE_SSH }}
      - name: Reset main branch
        run: |
          git fetch origin prod:prod
          git reset --hard prod
      - name: Create pull request into main
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.CMU_DELPHI_DEPLOY_MACHINE_PAT }}
          branch: bot/sync-prod-main
          commit-message: 'chore: sync prod-main'
          base: main
          title: 'chore: sync prod->main'
          labels: chore
          reviewers: krivard
          assignees: krivard
          body: |
            Syncing Prod->Main.
